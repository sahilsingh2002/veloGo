{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///../../libs/shared-repositories/src/index.ts","webpack:///../../libs/shared-repositories/src/lib/shared-repositories.module.ts","webpack:///../../libs/shared-repositories/src/lib/user.repository.ts","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"bcrypt\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"uuid\"","webpack:///external node-commonjs \"crypto\"","webpack:///./src/otp-service/otp-service.service.ts","webpack:///external commonjs \"twilio\"","webpack:///external commonjs \"nodemailer\"","webpack:///./src/schema/otp.schema.ts","webpack:///../../libs/shared-schema/src/index.ts","webpack:///../../libs/shared-schema/src/lib/shared-schema.module.ts","webpack:///../../libs/shared-schema/src/schemas/user.schema.ts","webpack:///./src/config/auth.config.ts","webpack:///external commonjs \"dotenv\"","webpack:///../../libs/shared-config/src/index.ts","webpack:///../../libs/shared-config/src/lib/shared-config.ts","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"path\"","webpack:///../../libs/shared-config/src/lib/shared-http-execption.filter.ts","webpack:///./src/app/dto/create-user.dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///external commonjs \"express\"","webpack:///../../libs/auth/index.ts","webpack:///../../libs/auth/guard/auth.guard.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///../../libs/auth/strategy/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///./src/utils/cookie.util.ts","webpack:///./src/schema/refreshtoken.schema.ts","webpack:///external commonjs \"cookie-parser\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {sharedConfig} from '@velogo/shared-config';\nimport {UserSchema} from '@velogo/shared-schema';\nimport { UserRepository } from '@velogo/shared-repositories';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from '@velogo/authConf';\nimport { RefreshTokenSchema } from '../schema/refreshtoken.schema';\nimport { OtpSchema } from '../schema/otp.schema';\nimport { OtpServiceService } from '../otp-service/otp-service.service';\nconst config = sharedConfig()\n@Module({\n\n  imports: [MongooseModule.forRoot(config.db_url,{dbName:'veloGo'}),\n    MongooseModule.forFeature([{name:\"User\", schema:UserSchema}, {name:\"RefreshToken\", schema:RefreshTokenSchema}, {name:\"Otp\", schema:OtpSchema}]),\n    PassportModule,\n    JwtModule.register({\n        secret: config.privateKey, // Use environment variable for production\n        signOptions: { expiresIn: '3m', algorithm: 'RS256' },\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService, OtpServiceService, UserRepository, JwtStrategy],\n  exports: [UserRepository]\n})\nexport class AppModule {}\n","import {\n  Body,\n  Controller,\n  HttpStatus,\n  Get,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n  UnauthorizedException,\n  Param, BadRequestException\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { IUser } from '@velogo/shared-interfaces';\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport {Response} from 'express'\nimport { JwtAuthGuard } from '@velogo/authConf';\n\nimport { makeCookies } from '../utils/cookie.util';\nimport { OtpServiceService } from '../otp-service/otp-service.service';\n\ntype Flow = 'signup' | 'login' | 'forgot-password';\ninterface VerifyOtpDto {\n  email: string;\n  otp: string;\n  password?: string;          // only used for forgot-password\n}\n\n@Controller()\nexport class AppController {\nconstructor(\n  private readonly appService: AppService,\n  private readonly otpService: OtpServiceService,\n) {}\n\n  @Post('signup/request-otp')\n async signup(@Res({passthrough:true}) res:Response, @Body() req:CreateUserDTO) {\n      await this.appService.signup(req);\n      res.status(HttpStatus.CREATED).json({success:true,message:\"sent otp to your email!\"})\n  }\n  @Post('login/request-otp')\n  async login(@Res({passthrough:true}) res: Response, @Body() req:{email:string,password:string}) {\n    await this.appService.login(req);\n    res.status(HttpStatus.OK).json({success:true,message:\"sent otp to your email!\"})\n  }\n  @Post(':flow(signup|login|forgot-password)/verify-otp')\n  async verifyOtp(\n    @Param('flow') flow: Flow,\n    @Res({ passthrough: true }) res: Response,\n    @Body() req: VerifyOtpDto,\n  ) {\n    // If this is a forgot-password flow, ensure a new password was provided\n    if (flow === 'forgot-password' && !req.password) {\n      throw new BadRequestException('New password is required for password reset.');\n    }\n    let message: string;\n\n    if (flow === 'forgot-password') {\n      // Validate OTP & reset the password (no tokens issued)\n      await this.appService.validate(req);\n      message = 'Password reset successful!';\n    } else {\n      // signup or login: validate OTP and issue tokens\n      const { authToken, refreshToken } = await this.appService.validate(req);\n      makeCookies(res, authToken, refreshToken);\n      message = flow === 'signup' ? 'Signup successful!' : 'Login successful!';\n    }\n    return res.status(HttpStatus.OK).json({ success: true, message });\n  }\n  @Post('refresh')\n  async refresh(@Res({passthrough:true}) res:Response, @Req() req: Request & {cookies?:{'refreshToken':string}}){\n    const refreshTo =  req.cookies.refreshToken\n    if(!refreshTo) throw new UnauthorizedException(\"No Refresh Token found!\")\n   const {authToken, refreshToken} = await this.appService.refreshToken(refreshTo);\n    makeCookies(res, authToken, refreshToken);\n    res.status(HttpStatus.OK).json({success:true, info: \"Refresh and Access tokens set successfully!\"})\n  }\n  @UseGuards(JwtAuthGuard)\n  @Get('')\n  async getUser(@Req() req: Request & {user?:IUser}, @Res() res:Response){\n    //TODO: add type to req\n    const {_id} = req.user as {_id:string}\n    const user = await this.appService.getUser(_id);\n    res.status(HttpStatus.OK).json({success:true, user:user});\n  }\n\n  @Post('forgot-password')\n  async forgotPassword(@Body() req:{email:string,password:string}, @Res() res: Response){\n    await this.appService.forgot(req);\n    res.status(HttpStatus.OK).json({success:true, message:\"sent otp to your email!\"})\n  }\n}\n","import { BadRequestException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport {IUser} from '@velogo/shared-interfaces'\nimport { CreateUserDTO } from './dto/create-user.dto';\nimport { UserRepository } from '@velogo/shared-repositories'\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcrypt'\nimport { JwtService } from '@nestjs/jwt';\nimport { RefreshToken } from '../schema/refreshtoken.schema';\nimport { v4 as uuidv4 } from 'uuid';\nimport { randomBytes } from 'crypto';\nimport { OtpServiceService } from '../otp-service/otp-service.service';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly userRepository: UserRepository,\n    @InjectModel('User') private readonly userModel: Model<IUser>,\n    @InjectModel('RefreshToken') private refreshTokenModel: Model<RefreshToken>,\n    private jwtService: JwtService,\n    private otpService: OtpServiceService\n  ) {}\n  async signup(\n    createUserDTO: CreateUserDTO\n  ): Promise<{ authToken: string; refreshToken: string }> {\n    try {\n      const { email } = createUserDTO;\n      const existingUser = await this.userRepository.findByEmail(email);\n      // TODO: make new exception for this\n      if (existingUser) throw new BadRequestException('User Already Exists!');\n      const newUser = new this.userModel(createUserDTO);\n      const user = await newUser.save();\n      await this.otpService.sendOtp(user);\n      return await this.generateTokens(user._id.toString());\n    } catch (e) {\n      throw new BadRequestException(e.message);\n    }\n  }\n  async login(req: { email: string; password: string }): Promise<void> {\n    const { email, password } = req;\n    const user = await this.userRepository.findByEmail(email);\n    if (!user) {\n      throw new NotFoundException('Either Email or Password are wrong!');\n    }\n    const match = await bcrypt.compare(password, user.password);\n    if (!match) {\n      throw new NotFoundException('Incorrect Password!');\n    }\n    const sent = await this.otpService.sendOtp(user);\n    if (!sent) throw new BadRequestException('Unable to send OTP!');\n    return;\n  }\n  async forgot(req: { email:string }): Promise<void> {\n    const { email } = req;\n    const user = await this.userRepository.findByEmail(email);\n    if (!user) throw new NotFoundException('User not found!');\n    const sent = await this.otpService.sendOtp(user);\n    if (!sent) throw new BadRequestException('Unable to send OTP!');\n  }\n  async validate(req: {\n    email: string;\n    otp: string;\n    password?: string;\n  }): Promise<{ authToken: string; refreshToken: string }> {\n    const userData = await this.userRepository.findByEmail(req.email);\n    if (!userData) throw new NotFoundException('User not found!');\n    const match = await this.otpService.validateOtp(\n      userData,\n      req.otp,\n      req.password\n    );\n    if (!match) throw new UnauthorizedException('Invalid OTP!');\n    return await this.generateTokens(userData._id.toString());\n  }\n  async refreshToken(\n    oldToken: string\n  ): Promise<{ authToken: string; refreshToken: string }> {\n    const tokenData = await this.refreshTokenModel.findOne({ token: oldToken });\n    if (!tokenData || tokenData.expires < new Date())\n      throw new UnauthorizedException(\n        'Refresh Token expired! Pleas login again!'\n      );\n    await this.refreshTokenModel.findByIdAndDelete(tokenData._id);\n    return await this.generateTokens(tokenData.userId.toString());\n  }\n\n  async getUser(userId: string) {\n    const user = await this.userRepository.findById(userId);\n    console.log(user);\n    if (!user) throw new NotFoundException('Not found!');\n    return user;\n  }\n\n  private async generateTokens(userId: string) {\n    const refreshToken = randomBytes(64).toString('hex');\n    const tokenIndex = uuidv4();\n    const expires = new Date();\n    expires.setDate(expires.getDate() + 7);\n\n    await this.refreshTokenModel.create({\n      userId: userId,\n      token: refreshToken,\n      expires,\n      tokenIndex,\n    });\n    const authToken = this.jwtService.sign({ _id: userId });\n    return { authToken, refreshToken };\n  }\n}\n","export * from './lib/shared-repositories.module';\nexport * from './lib/user.repository'\n","import { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class SharedRepositoriesModule {}\n","import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { IUser } from '@velogo/shared-interfaces';\n\n@Injectable()\nexport class UserRepository{\n    constructor(@InjectModel('User') private userModel:Model<IUser>){ }\n    async findByEmail(email:string):Promise<IUser | null>{\n        return this.userModel.findOne({email}).exec()\n    }\n    async findById(id:string): Promise<IUser | null>{\n        return this.userModel.findById(id)\n    }\n}","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"mongoose\");","module.exports = require(\"bcrypt\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"uuid\");","module.exports = require(\"crypto\");","import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Twilio } from 'twilio';\nimport * as nodemailer from 'nodemailer';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Otp } from '../schema/otp.schema';\nimport { IOtp } from '../interfaces/otp.interface';\nimport { User } from '@velogo/shared-schema';\nimport { IUser } from '@velogo/shared-interfaces';\nimport {authConfig} from '../config/auth.config';\nimport { Model } from 'mongoose';\nimport { sharedConfig } from '@velogo/shared-config';\n\n@Injectable()\nexport class OtpServiceService {\n  private twilioClient:Twilio;\n  private mailer: nodemailer.Transporter;\n  private config = authConfig(); // just like sharedConfig()\n  private mainConf = sharedConfig();\n  constructor(\n    @InjectModel(Otp.name) private otpModel: Model<IOtp>,\n    @InjectModel(User.name) private userModel: Model<IUser>,\n  ) {\n    this.twilioClient = new Twilio(\n      this.config.twilio_sid,\n      this.config.twilio_token,\n    );\n    this.mailer = nodemailer.createTransport({\n      service: 'gmail',\n      auth: this.mainConf.nodemailer_auth,\n    });\n  }\n  private generateOtp():string{\n    return Math.floor(10**6 + Math.random()*9*10**5).toString()\n  }\n  async sendOtp(user:IUser):Promise<boolean>{\n    try {\n      console.log(user._id)\n      await this.otpModel.deleteMany({ userId:user._id })\n      const otp = this.generateOtp();\n      const expiresAt = new Date(Date.now() + 5*60*1000);\n      await this.otpModel.create({\n        otp,\n        expiresAt,\n        userId:user._id\n      })\n      // await this.twilioClient.messages.create({\n      //   body: `Your OTP is ${otp}. This OTP expires in 5 minutes.`,\n      //   from: this.config.twilio_from,\n      //   to: \"+91\"+user.phone,\n      // })\n      await this.mailer.sendMail({\n        to: user.email,\n        from: this.mainConf.nodemailer_auth.user,\n        subject: \"OTP Code\",\n        html: `Your OTP is ${otp}. This OTP expires in 5 minutes.`\n      })\n\n      return true;\n    }\n    catch(e){\n      console.log(e.message)\n      return false;\n    }\n  }\n  async validateOtp(user:IUser, otp:string, password?:string):Promise<boolean>{\n    const userRec = await this.otpModel.findOne({ otp, userId: user._id, expiresAt: { $gt: new Date() } })\n    console.log(userRec)\n    if(userRec.userId.toString() !== user._id.toString()) return false\n    if(password){\n     const userEntry = await this.userModel.findOne({_id:user._id})\n      userEntry.password = password;\n     await userEntry.save();\n    }\n    return true\n  }\n}\n","module.exports = require(\"twilio\");","module.exports = require(\"nodemailer\");","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { User } from '@velogo/shared-schema';\n\n@Schema({ timestamps: true})\nexport class Otp extends Document{\n  @Prop({required:true, index:true})\n  otp:string;\n\n  @Prop({required:true})\n  expiresAt:Date;\n\n  @Prop({type:Types.ObjectId, ref: User.name, required:true})\n  userId: string;\n}\n\nexport const OtpSchema = SchemaFactory.createForClass(Otp);\n\n// **Add this** right after creating the Schema:\nOtpSchema.index({ expiresAt: 1 }, { expireAfterSeconds: 0 });\n","export * from './lib/shared-schema.module';\nexport * from './schemas/user.schema';","import { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class SharedSchemaModule {}\n","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport * as bcrypt from 'bcrypt'\n\n@Schema()\nexport class User extends Document{\n    @Prop({required:true})\n    firstName: string\n    @Prop()\n    lastName:string\n\n    @Prop({required:true})\n    email:string\n\n    @Prop({required:true})\n    password:string\n\n    @Prop({required:true})\n    phone:string\n\n    @Prop({required:true})\n    age:number\n\n    @Prop({required:true})\n    role: \"RIDER\" | \"DRIVER\" | \"ADMIN\"\n}\nexport const UserSchema = SchemaFactory.createForClass(User);\nUserSchema.pre('save', async function(next) {\n    if (this.isModified('password')) {\n      const saltRounds = 10;\n      this.password = await bcrypt.hash(this.password, saltRounds);\n    }\n    next();\n  });\n","import * as dotenv from 'dotenv';\ndotenv.config();\n\nexport const authConfig = ()=> {\n  return {\n    port: 3000,\n    twilio_sid:process.env.TWILIO_SID,\n    twilio_token:process.env.TWILIO_TOKEN,\n    twilio_from:\"(320) 399-3295\"\n  }\n}\n","module.exports = require(\"dotenv\");","export * from './lib/shared-config';\nexport * from './lib/shared-http-execption.filter'","import * as dotenv from 'dotenv'\nimport * as fs from 'fs'\nimport * as path from 'path'\n\ndotenv.config()\nexport function sharedConfig(): { db_url: string; privateKey: string; publicKey: string; nodemailer_auth: { user: string; pass: string; }; } {\n  return {\n    db_url: process.env.MONGODB_URI || '',\n    privateKey: fs.readFileSync(\n      path.join(process.cwd(), 'keys', 'rsa.key'),\n      'utf8'\n    ),\n    publicKey: fs.readFileSync(\n      path.join(process.cwd(), 'keys', 'rsa.key.pub'),\n      'utf8'\n    ),\n    nodemailer_auth: {\n      user: 'ss2202002@gmail.com',\n      pass: 'ooutwtxyibkdghyw',\n    },\n  };\n}\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","import { ExceptionFilter, Catch, ArgumentsHost, HttpException, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    // constructor(private logger: Logger) {}\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n    const status = exception.getStatus();\n    const info =  exception.message\n    // this.logger.error(\n    //     `${request.method} ${request.originalUrl} ${status} error: ${err}`\n    // )\n    response\n      .status(status)\n      .json({\n        success: false,\n        // timestamp: new Date().toISOString(),\n        // path: request.url,\n        info\n      });\n  }\n}","import {IsEmail, IsEnum, IsNotEmpty, IsNumber, IsString, IsStrongPassword, Max, MaxLength, Min} from 'class-validator'\n\nenum UserRole {\n    RIDER = 'RIDER',\n    DRIVER = 'DRIVER',\n    ADMIN = 'ADMIN',\n  }\n\nexport class CreateUserDTO{\n    @IsString()\n    @MaxLength(30)\n    @IsNotEmpty()\n    readonly firstName:string;\n\n    @IsString()\n    @MaxLength(30)\n    @IsNotEmpty()\n    readonly lastName:string;\n\n    @IsEmail()\n    @IsNotEmpty()\n    readonly email:string;\n\n    @IsStrongPassword()\n    @IsNotEmpty()\n    readonly password:string;\n\n    @IsNumber()\n    @IsNotEmpty()\n    readonly phone:number;\n\n    @IsNumber()\n    @Min(15)\n    @Max(100)\n    @IsNotEmpty()\n    readonly age:number;\n\n    //TODO: make better DTO, try to show the value and how it is incorrect in enum and other changes\n    \n    @IsEnum(UserRole, { message: 'Role is empty or not a valid role' })\n    readonly role: UserRole;\n}","module.exports = require(\"class-validator\");","module.exports = require(\"express\");","export * from './guard/auth.guard'\nexport * from './strategy/jwt.strategy'","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n","module.exports = require(\"@nestjs/passport\");","import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ObjectId } from 'mongoose';\nimport { sharedConfig } from \"@velogo/shared-config\";\nconst config = sharedConfig()\n\nconst cookieExtractor = (req: Request & {cookies?:{'token':string}}) => {\n    let token = null;\n    if (req && req.cookies) {\n      token = req.cookies['token'];\n    }\n    return token;\n  };\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: cookieExtractor,\n            ignoreExpiration: false,\n            secretOrKey: config.publicKey,\n            algorithms: ['RS256']\n        });\n    }\n\n    async validate(payload: {_id:string,iat:number,exp:number}) {\n        console.log(\"Validating\", payload)\n        return payload;\n    }\n}","module.exports = require(\"passport-jwt\");","import { Response } from 'express';\n\nexport function makeCookies(res: Response, authToken: string, refreshToken: string) {\n  res.cookie('token', authToken, {\n    httpOnly: true,\n    secure: true,\n    sameSite: 'strict',\n    maxAge: 15 * 60 * 1000,\n  });\n\n  res.cookie('refreshToken', refreshToken, {\n    httpOnly: true,\n    secure: true,\n    sameSite: 'strict',\n    maxAge: 7 * 24 * 60 * 60 * 1000,\n  });\n}","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document, Schema as sch } from \"mongoose\";\n\n@Schema()\nexport class RefreshToken extends Document{\n    @Prop({ type: sch.Types.ObjectId, ref: 'User', required: true })\n    userId: sch.Types.ObjectId\n\n    @Prop({required:true, unique:true})\n    token:string\n\n    @Prop({required:true})\n    expires:Date\n\n    @Prop({required:true})\n    tokenIndex: string\n}\nexport const RefreshTokenSchema = SchemaFactory.createForClass(RefreshToken);\nRefreshTokenSchema.index({ expires: 1 }, { expireAfterSeconds: 0 });\nRefreshTokenSchema.index({ tokenIndex: 1 });","module.exports = require(\"cookie-parser\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\nimport { HttpExceptionFilter } from '@velogo/shared-config';\nimport cookieParser from 'cookie-parser';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.useGlobalFilters(new HttpExceptionFilter())\n  app.use(cookieParser());\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}